# This is a basic workflow to help you get started with Actions

name: CI/CD

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths-ignore: 
      - '**/README.md'
      - '**/DEVELOPMENT.md'
      - '**/CHANGELOG.rst'
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  cancel:
    name: Cancel Previous Runs
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}

  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    needs: cancel

    env: 
      CATKIN_WORKSPACE: uav_ws
      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # fetch the whole history

      # Use ssh key in private repository
      # https://www.webfactory.de/blog/use-ssh-key-for-private-repositories-in-github-actions
      - name: Setup SSH Keys and known_hosts
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add - <<< "${{ secrets.SSH_PRIVATE_KEY }}"

      # Runs a single command using the runners shell
      - name: Install
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: ./.ci/ci_before_install.sh

      # Runs a set of commands using the runners shell
      - name: Build
        run: ./.ci/ci_test_build.sh

      # Runs a set of commands using the runners shell
      - name: Test
        run: ./.ci/ci_run_tests.sh

  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name != 'pull_request' 
    strategy:
      matrix:
        job:
          - name: focal
            base_image: nvidia/opengl:1.2-glvnd-runtime-ubuntu20.04
          - name: focal-nogpu
            base_image: ubuntu:focal
            # - name: bionic
            #   base_image: nvidia/opengl:1.2-glvnd-runtime-ubuntu18.04
    steps:
      # Use ssh key in private repository
      # https://www.webfactory.de/blog/use-ssh-key-for-private-repositories-in-github-actions
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME2 }}
          password: ${{ secrets.DOCKERHUB_PASSWORD2 }}
      - name: Setup SSH Keys and known_hosts
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add - <<< "${{ secrets.SSH_PRIVATE_KEY }}"
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v5
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        with:
          file: Dockerfile.source
          push: true
          tags: lmark2/uav_ros_simulation_source:${{ matrix.job.name }}
          ssh: |
            default=/tmp/ssh_agent.sock
          build-args: |
            BASE_IMAGE=${{ matrix.job.base_image }} 
            --ssh=default
